@{
    ViewData["Title"] = "Cart";
    Layout = "~/Views/Shared/_Layout_LoginAndRegister.cshtml";
}
@model CartViewModel

<h2>Your Shopping Cart</h2>

@if (Model.CartProducts.Count == 0)
{
    <p>Your cart is empty.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Color</th>
                <th>Size</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.CartProducts)
            {
                <tr>
                    <td hidden>@item.CartProductListId</td>
                    <td>
                        <img src="@item.ImageUrl" alt="@item.ProductName" width="50" />
                        @item.ProductName
                    </td>
                    <td>@item.ColorName</td>
                    <td>@item.SizeName</td>
                    <td>
                        <div class="input-group">
                            <button class="btn btn-secondary btn-sm" onclick="updateQuantity('@item.CartProductListId', -1)">-</button>
                            <input type="number" id="quantity-@item.CartProductListId" value="@item.Quantity" min="1" class="form-control" style="width: 70px;" readonly />
                            <button class="btn btn-secondary btn-sm" onclick="updateQuantity('@item.CartProductListId', 1)">+</button>
                        </div>
                    </td>
                    <td>@item.DiscountedPrice.ToString("N0")</td>
                    <td id="total-@item.CartProductListId" data-price="@item.DiscountedPrice">
                        @((item.Quantity * item.DiscountedPrice).ToString("N0"))
                    </td>
                    <td>
                        <button class="btn btn-danger" onclick="removeFromCart('@item.CartProductListId')">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-right">
        <h4>Total: <span id="cart-total">@Model.CartProducts.Sum(p => p.Quantity * p.DiscountedPrice).ToString("N0")</span></h4>
        <a asp-controller="Checkout" asp-action="Index" class="btn btn-success">Proceed to Checkout</a>
    </div>
}

<script>
    function updateQuantity(cartProductListId, change) {
        var quantityInput = document.getElementById('quantity-' + cartProductListId);
        var totalCell = document.getElementById('total-' + cartProductListId);
        var cartTotalSpan = document.getElementById('cart-total');

        var currentQuantity = parseInt(quantityInput.value, 10);
        var newQuantity = currentQuantity + change;
        if (newQuantity < 1) return; // Prevent going below 1

        quantityInput.value = newQuantity;

        $.ajax({
            url: '@Url.Action("UpdateQuantity", "ThuNghiem")', // Ensure this is the correct controller
            type: 'POST',
            data: { cartProductListId: cartProductListId, quantity: newQuantity },
            success: function (result) {
                if (result.success) {
                    // Update the total for this row
                    var unitPrice = parseFloat(totalCell.dataset.price.replace(/,/g, '')); // Remove commas for parsing
                    var newTotal = newQuantity * unitPrice;
                    totalCell.innerText = formatNumber(newTotal);

                    // Recalculate and update the cart total
                    var newCartTotal = 0;
                    $('td[id^="total-"]').each(function () {
                        var cellTotal = parseFloat($(this).text().replace(/[^0-9.]+/g, "")); // Remove commas for parsing
                        if (!isNaN(cellTotal)) {
                            newCartTotal += cellTotal;
                        }
                    });
                    cartTotalSpan.innerText = formatNumber(newCartTotal);
                } else {
                    alert('Failed to update quantity.');
                }
            }
        });
    }

    function removeFromCart(cartProductListId) {
        $.ajax({
            url: '@Url.Action("RemoveFromCart", "ThuNghiem")', // Ensure this is the correct controller
            type: 'POST',
            data: { cartProductListId: cartProductListId },
            success: function (result) {
                if (result.success) {
                    location.reload(); // Reload the page to reflect changes
                } else {
                    alert('Failed to remove item.');
                }
            }
        });
    }

    // Helper function to format numbers with thousands separators
    function formatNumber(number) {
        return number.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
    }


</script>
