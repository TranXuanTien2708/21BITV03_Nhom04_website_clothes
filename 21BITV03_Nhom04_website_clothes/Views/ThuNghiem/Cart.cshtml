@{
    ViewData["Title"] = "Cart";
    Layout = "~/Views/Shared/_Layout_LoginAndRegister.cshtml";
}
@model CartViewModel
<div class="container-fluid page-header-login py-5">
    <h1 class="text-center text-white display-6">Trang giỏ hàng</h1>
    <ol class="breadcrumb justify-content-center mb-0">
        <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
        <li class="breadcrumb-item"><a href="#">Giỏ hàng</a></li>
    </ol>
</div>
<div class="container-fluid py-5">
    <div class="container py-5">
        @if (Model.CartProducts.Count == 0)
        {
            <p>Your cart is empty.</p>
        }
        else
        {
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Products</th>
                            <th scope="col">Color</th>
                            <th scope="col">Size</th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Price</th>
                            <th scope="col">Total</th>
                            <th scope="col">Handle</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.CartProducts)
                        {
                            <tr>
                                <th scope="row">
                                    <div class="d-flex align-items-center">
                                        <img src="@item.ImageUrl" class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;" alt="@item.ProductName" />
                                    </div>
                                </th>
                                <td><p class="mb-0 mt-4">@item.ColorName</p></td>
                                <td><p class="mb-0 mt-4">@item.SizeName</p></td>
                                <td>
                                    <div class="input-group mt-4" style="width: 100px;">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-minus rounded-circle bg-light border" onclick="updateQuantity('@item.CartProductListId', -1)">
                                                <i class="fa fa-minus"></i>
                                            </button>
                                        </div>
                                        <input type="text" class="form-control form-control-sm text-center border-0" id="quantity-@item.CartProductListId" value="@item.Quantity" readonly />
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-plus rounded-circle bg-light border" onclick="updateQuantity('@item.CartProductListId', 1)">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <p class="mb-0 mt-4">@item.DiscountedPrice.ToString("N0")</p>
                                </td>
                                <td id="total-@item.CartProductListId" data-price="@item.DiscountedPrice">
                                    <p class="mb-0 mt-4">@((item.Quantity * item.DiscountedPrice).ToString("N0"))</p>

                                </td>
                                <td>
                                    <p class="mb-0 mt-3">
                                    <button class="btn btn-md rounded-circle bg-light border" onclick="removeFromCart('@item.CartProductListId')">
                                        <i class="fa fa-times text-danger"></i>
                                    </button>
                                    </p>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="row g-4 justify-content-end">
                <div class="col-8"></div>
                <div class="col-sm-8 col-md-7 col-lg-6 col-xl-4">
                    <div class="bg-light rounded">

                        <div class="py-4 mb-4 border-top border-bottom d-flex justify-content-between">
                            <h5 class="mb-0 ps-4 me-4">Total</h5>
                            <p class="mb-0 pe-4" id="cart-total">
                                $@Model.CartProducts.Sum(p => p.Quantity * p.DiscountedPrice).ToString("N2")
                            </p>
                        </div>
                        <a asp-controller="Checkout" asp-action="Index" class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4">Proceed Checkout</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    function updateQuantity(cartProductListId, change) {
        var quantityInput = document.getElementById('quantity-' + cartProductListId);
        var totalCell = document.getElementById('total-' + cartProductListId);
        var cartTotalSpan = document.getElementById('cart-total');

        var currentQuantity = parseInt(quantityInput.value, 10);
        var newQuantity = currentQuantity + change;
        if (newQuantity < 1) return; // Prevent going below 1

        quantityInput.value = newQuantity;

        $.ajax({
            url: '@Url.Action("UpdateQuantity", "ThuNghiem")', // Ensure this is the correct controller
            type: 'POST',
            data: { cartProductListId: cartProductListId, quantity: newQuantity },
            success: function (result) {
                if (result.success) {
                    // Update the total for this row
                    var unitPrice = parseFloat(totalCell.dataset.price.replace(/,/g, '')); // Remove commas for parsing
                    var newTotal = newQuantity * unitPrice;
                    totalCell.innerText = formatNumber(newTotal);

                    // Recalculate and update the cart total
                    var newCartTotal = 0;
                    $('td[id^="total-"]').each(function () {
                        var cellTotal = parseFloat($(this).text().replace(/[^0-9.]+/g, "")); // Remove commas for parsing
                        if (!isNaN(cellTotal)) {
                            newCartTotal += cellTotal;
                        }
                    });
                    cartTotalSpan.innerText = formatNumber(newCartTotal);
                } else {
                    alert('Failed to update quantity.');
                }
            }
        });
    }

    function removeFromCart(cartProductListId) {
        $.ajax({
            url: '@Url.Action("RemoveFromCart", "ThuNghiem")', // Ensure this is the correct controller
            type: 'POST',
            data: { cartProductListId: cartProductListId },
            success: function (result) {
                if (result.success) {
                    location.reload(); // Reload the page to reflect changes
                } else {
                    alert('Failed to remove item.');
                }
            }
        });
    }

    // Helper function to format numbers with thousands separators
    function formatNumber(number) {
        return number.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
    }
</script>
